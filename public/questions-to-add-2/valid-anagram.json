{
  "filename": "valid-anagram",
  "title": "Valid Anagram",
  "keywords": [
    "valid",
    "anagram",
    "string",
    "rearrange",
    "letters",
    "frequency"
  ],
  "description": "<h2>Valid Anagram</h2><p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code> if <code>t</code> is an anagram of <code>s</code>, and <code>false</code> otherwise.</p><p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p><h3>Examples:</h3><ul><li><strong>Example 1:</strong><br>Input: s = \"anagram\", t = \"nagaram\"<br>Output: true</li><li><strong>Example 2:</strong><br>Input: s = \"rat\", t = \"car\"<br>Output: false</li></ul><h3>Constraints:</h3><ul><li>1 <= s.length, t.length <= 5 * 10<sup>4</sup></li><li>s and t consist of lowercase English letters.</li></ul>",
  "languages": {
    "python": {
      "template": "def isAnagram(s, t):\n    ",
      "solution_text": "Count character frequencies in both strings and compare them.",
      "solution_code": "def isAnagram(s, t):\n    if len(s) != len(t):\n        return False\n    \n    count = {}\n    \n    # Count characters in s\n    for char in s:\n        count[char] = count.get(char, 0) + 1\n    \n    # Subtract characters in t\n    for char in t:\n        if char not in count:\n            return False\n        count[char] -= 1\n        if count[char] == 0:\n            del count[char]\n    \n    return len(count) == 0"
    },
    "javascript": {
      "template": "function isAnagram(s, t) {\n  \n}",
      "solution_text": "Count character frequencies in both strings and compare them.",
      "solution_code": "function isAnagram(s, t) {\n    if (s.length !== t.length) return false;\n    \n    const count = {};\n    \n    // Count characters in s\n    for (const char of s) {\n        count[char] = (count[char] || 0) + 1;\n    }\n    \n    // Subtract characters in t\n    for (const char of t) {\n        if (!count[char]) return false;\n        count[char]--;\n        if (count[char] === 0) {\n            delete count[char];\n        }\n    }\n    \n    return Object.keys(count).length === 0;\n}"
    },
    "typescript": {
      "template": "function isAnagram(s: string, t: string): boolean {\n  \n}",
      "solution_text": "Count character frequencies in both strings and compare them.",
      "solution_code": "function isAnagram(s: string, t: string): boolean {\n    if (s.length !== t.length) return false;\n    \n    const count: { [key: string]: number } = {};\n    \n    // Count characters in s\n    for (const char of s) {\n        count[char] = (count[char] || 0) + 1;\n    }\n    \n    // Subtract characters in t\n    for (const char of t) {\n        if (!count[char]) return false;\n        count[char]--;\n        if (count[char] === 0) {\n            delete count[char];\n        }\n    }\n    \n    return Object.keys(count).length === 0;\n}"
    },
    "java": {
      "template": "class Solution {\n    public boolean isAnagram(String s, String t) {\n        \n    }\n}",
      "solution_text": "Count character frequencies in both strings and compare them.",
      "solution_code": "class Solution {\n    public boolean isAnagram(String s, String t) {\n        if (s.length() != t.length()) return false;\n        \n        Map<Character, Integer> count = new HashMap<>();\n        \n        // Count characters in s\n        for (char c : s.toCharArray()) {\n            count.put(c, count.getOrDefault(c, 0) + 1);\n        }\n        \n        // Subtract characters in t\n        for (char c : t.toCharArray()) {\n            if (!count.containsKey(c)) return false;\n            count.put(c, count.get(c) - 1);\n            if (count.get(c) == 0) {\n                count.remove(c);\n            }\n        }\n        \n        return count.isEmpty();\n    }\n}"
    }
  },
  "order_matters": false,
  "test_cases": [
    {
      "id": 1,
      "input": {
        "s": "anagram",
        "t": "nagaram"
      },
      "output": true
    },
    {
      "id": 2,
      "input": {
        "s": "rat",
        "t": "car"
      },
      "output": false
    }
  ]
}