{
  "filename": "same-tree",
  "title": "Same Tree",
  "keywords": [
    "same",
    "tree",
    "binary",
    "recursive",
    "comparison",
    "identical"
  ],
  "description": "<h2>Same Tree</h2><p>Given the roots of two binary trees <code>p</code> and <code>q</code>, write a function to check if they are the same or not.</p><p>Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.</p><h3>Examples:</h3><ul><li><strong>Example 1:</strong><br>Input: p = [1,2,3], q = [1,2,3]<br>Output: true</li><li><strong>Example 2:</strong><br>Input: p = [1,2], q = [1,null,2]<br>Output: false</li><li><strong>Example 3:</strong><br>Input: p = [1,2,1], q = [1,1,2]<br>Output: false</li></ul><h3>Constraints:</h3><ul><li>The number of nodes in both trees is in the range [0, 100].</li><li>-10<sup>4</sup> <= Node.val <= 10<sup>4</sup></li></ul>",
  "languages": {
    "python": {
      "template": "def isSameTree(p, q):\n    ",
      "solution_text": "Recursively compare the structure and values of both trees.",
      "solution_code": "def isSameTree(p, q):\n    if not p and not q:\n        return True\n    \n    if not p or not q:\n        return False\n    \n    if p.val != q.val:\n        return False\n    \n    return isSameTree(p.left, q.left) and isSameTree(p.right, q.right)"
    },
    "javascript": {
      "template": "function isSameTree(p, q) {\n  \n}",
      "solution_text": "Recursively compare the structure and values of both trees.",
      "solution_code": "function isSameTree(p, q) {\n    if (!p && !q) return true;\n    \n    if (!p || !q) return false;\n    \n    if (p.val !== q.val) return false;\n    \n    return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n}"
    },
    "typescript": {
      "template": "function isSameTree(p: TreeNode | null, q: TreeNode | null): boolean {\n  \n}",
      "solution_text": "Recursively compare the structure and values of both trees.",
      "solution_code": "function isSameTree(p: TreeNode | null, q: TreeNode | null): boolean {\n    if (!p && !q) return true;\n    \n    if (!p || !q) return false;\n    \n    if (p.val !== q.val) return false;\n    \n    return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n}"
    },
    "java": {
      "template": "class Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        \n    }\n}",
      "solution_text": "Recursively compare the structure and values of both trees.",
      "solution_code": "class Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        if (p == null && q == null) return true;\n        \n        if (p == null || q == null) return false;\n        \n        if (p.val != q.val) return false;\n        \n        return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n    }\n}"
    }
  },
  "order_matters": false,
  "test_cases": [
    {
      "id": 1,
      "input": {
        "p": [
          1,
          2,
          3
        ],
        "q": [
          1,
          2,
          3
        ]
      },
      "output": true
    },
    {
      "id": 2,
      "input": {
        "p": [
          1,
          2
        ],
        "q": [
          1,
          null,
          2
        ]
      },
      "output": false
    },
    {
      "id": 3,
      "input": {
        "p": [
          1,
          2,
          1
        ],
        "q": [
          1,
          1,
          2
        ]
      },
      "output": false
    }
  ]
}