{
  "title": "Two Sum",
  "mainDescription": "Leetcode 1. Two Sum\n\nGiven an array of integers `nums` and an integer `target`, return the indices `i` and `j` such that `nums[i] + nums[j] == target` and `i != j`.\n    \nYou may assume that *every* input has exactly one pair of indices `i` and `j` that satisfy the condition.\n\nReturn the answer with the smaller index first.",
  "examples": [
    {
      "number": 1,
      "code": "Input: \nnums = [3,4,5,6], target = 7\n\nOutput: [0,1]",
      "explanation": "`nums[0] + nums[1] == 7`, so we return `[0, 1]`."
    },
    {
      "number": 2,
      "code": "Input: nums = [4,5,6], target = 10\n\nOutput: [0,2]",
      "explanation": ""
    },
    {
      "number": 3,
      "code": "Input: nums = [5,5], target = 10\n\nOutput: [0,1]",
      "explanation": ""
    }
  ],
  "constraints": "* `2 <= nums.length <= 1000`\n* `-10,000,000 <= nums[i] <= 10,000,000`\n* `-10,000,000 <= target <= 10,000,000`",
  "fullDescription": "Leetcode 1. Two Sum\n\nGiven an array of integers `nums` and an integer `target`, return the indices `i` and `j` such that `nums[i] + nums[j] == target` and `i != j`.\n    \nYou may assume that *every* input has exactly one pair of indices `i` and `j` that satisfy the condition.\n\nReturn the answer with the smaller index first. \n\n**Example 1:**\n\n```java\nInput: \nnums = [3,4,5,6], target = 7\n\nOutput: [0,1]\n```\n\nExplanation: `nums[0] + nums[1] == 7`, so we return `[0, 1]`.\n\n**Example 2:**\n\n```java\nInput..."
}